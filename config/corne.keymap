#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20
#include <dt-bindings/zmk/pointing.h>

#define L0 0
#define L1 1
#define L2 2
#define L3 3
#define L4 4
#define L5 5
#define L6 6

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41

/ { 
  behaviors {
     soft_off_both: soft_off_both {
       compatible = "zmk,behavior-soft-off";
       #binding-cells = <0>;
       hold-time-ms = <3000>;
     };
        
    lt_ss: layer_tap_sticky_shift {
      compatible = "zmk,behavior-hold-tap";
      label = "LAYER_TAP_STICKY_SHIFT";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "hold-preferred";
      bindings = <&mo>, <&sk>;
    };

    /**
     * Left hand positional hold tap, used for home block modifiers
     */
    lhr: left_hand_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "LEFT_POSITIONAL_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <300>;
        quick-tap-ms = <200>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_R>;
        hold-trigger-on-release;
    };

    /**
     * Right hand positional hold tap, used for home block modifiers
     */
    rhr: right_hand_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "RIGHT_POSITIONAL_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <300>;
        quick-tap-ms = <200>;
        global-quick-tap;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_L>;
        hold-trigger-on-release;
    };

    l6_toggle: layer_6_toggle {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_tap &to 0>;
        label = "LAYER_6_TOGGLE";
    };
  };

};

/ conditional_layers {
        compatible = "zmk,conditional-layers";
        layer_6_off {
            if-layers = <6>;
            then-layer = <0>;
        };
    };

  keymap {
    compatible = "zmk,keymap";

    /**
     * Alpha layer (L0)
     */
    layer_0 {
      label = "ALPHA";
      bindings = <
        &none &kp Q     &kp W       &kp E       &kp R        &kp T       &kp Y      &kp U        &kp I       &kp O       &kp P     &none
        &none &kp A     &kp S       &kp D       &kp F        &kp G       &kp H      &kp J        &kp K       &kp L       &lt L5 RET   &none
        &none &kp Z     &kp X       &kp C       &kp V        &kp B       &kp N      &kp M        &kp COMMA   &kp DOT     &kp FSLH  &none
                                    &lhr LSHFT CAPS    &mo L3       &lt_ss L1 LSHIFT  &lt L2 SPACE &mo L4  &soft_off_both
      >;
    };

    /**
     * Symbols layer (L1)
     */
    layer_1 {
      label = "RAISE";
      bindings = <
        &none &kp N1   &kp N2    &kp N3    &kp N4     &kp N5     &kp N6    &kp N7    &kp N8    &kp N9            &kp N0    &none
        &none &kp TAB  &kp LALT  &kp LCMD  &kp LCTRL  &kp DEL   &kp BSPC  &kp SEMI  &kp SQT   &kp BSLH      &kp EQUAL &none
        &none &kp LSHIFT &kp LG(X) &kp LG(C) &kp LG(V)  &kp LBKT &kp RBKT  &kp C_PP &kp C_PREV  &kp C_NEXT &kp FSLH  &none
                                 &none     &mo L3     &none      &kp MINUS &mo L4    &sl L3
      >;
    };

    /**
     * Number and directions layer (L2)
     */
    layer_2 {
      label = "LOWER";
      bindings = <
        &none &kp GRAVE &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &kp LC(N5)  &kp LC(N6)   &kp LC(N7) &kp LC(N8)    &kp LC(N9)  &kp ESC &none
        &none &kp TAB &kp LALT  &kp LCMD  &kp LCTRL  &kp LG(N5)  &kp LEFT &kp DOWN &kp UP  &kp RIGHT  &kp LG(N0)    &none
        &none &kp LSHIFT  &none    &kp C    &bt BT_SEL 0   &bt BT_SEL 1   &l6_toggle   &kp C_MUTE &kp C_VOLUME_DOWN &kp C_VOLUME_UP &kp LSHIFT  &none
                                    &kp CAPS  &mo L3     &mo L1      &kp SPACE &mo L4       &sl L3
      >;
    };

    /**
     * Controls homerow mod (L3)
     */
    layer_3 {
      label = "HOMEROW";
      bindings = <
        &none &kp Q &kp W       &kp E       &kp R        &kp T       &kp Y &kp U        &kp I       &kp O       &kp P     &none
        &none &kp A &kp LALT    &kp LCMD    &kp LCTRL    &kp LBKT    &kp H &kp J &kp K  &kp L  &kp RET  &none
        &none &kp LSHFT  &kp X  &kp C  &kp V &kp B  &kp N &kp M &kp COMMA   &kp DOT  &kp SLASH &none
                            &none &none      &kp LSHFT      &kp SPACE  &to L0       &none
      >;
    };

    /**
     * Controls homerow mod (L4)
     */
    layer_4 {
      label = "HOMEROW";
      bindings = <
        &none &kp Q &kp W  &kp E  &kp R  &kp T        &kp Y &kp U        &kp I       &kp O       &kp LBKT   &none
        &none &kp A &kp S  &kp D  &kp F  &kp G        &kp RBKT &kp LCTRL &kp LCMD  &kp LALT  &kp RET  &none
        &none &kp Z &kp X  &kp C  &kp V  &kp B        &kp N &kp M &kp COMMA   &kp DOT  &kp LSHFT &none
                            &none &kp BSPC      &kp LSHFT      &kp SPACE  &to L0       &none
      >;
    };

    layer_5 {
      label = "MOUSE";
      bindings = <
        &none &mkp LCLK &mmv MOVE_UP  &mkp RCLK  &msc SCRL_UP  &kp T        &kp Y &kp U        &kp I       &kp O       &kp LBKT   &none
        &none &mmv MOVE_LEFT &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &kp G        &kp RBKT &kp LCTRL &kp LCMD  &kp LALT  &kp RET  
        &none&none &kp Z &kp X  &kp C  &kp V  &kp B        &kp N &kp M &kp COMMA   &kp DOT  &kp LSHFT &none
                            &none &kp BSPC      &kp LSHFT      &kp SPACE  &to L0       &none
      >;
    };

    /**
     * Gaming layer (L6)
     */
    layer_6 {
      label = "GAMING";
      bindings = <
        &none &kp TAB     &kp Q       &kp W       &kp E        &kp R       &kp Y      &kp U        &kp I       &kp O       &kp P     &none
        &none &kp LSHIFT  &kp A       &kp S       &kp D        &kp F       &kp H      &kp J        &kp K       &kp L       &lt L5 RET   &none
        &none &kp LCTRL   &kp Z       &kp X       &kp C        &kp V       &none      &kp M        &kp COMMA   &kp DOT     &kp FSLH  &none
                                      &kp G       &kp Y        &kp T       &lt L2 SPACE &mo L4  &soft_off_both
      >;
    };
  };
};